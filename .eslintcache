[{"/home/krishna/Desktop/practicecodes/cleverProgrammer/todoapp/src/reportWebVitals.js":"1","/home/krishna/Desktop/practicecodes/cleverProgrammer/todoapp/src/App.js":"2","/home/krishna/Desktop/practicecodes/cleverProgrammer/todoapp/src/index.js":"3","/home/krishna/Desktop/practicecodes/cleverProgrammer/todoapp/src/Todo.js":"4","/home/krishna/Desktop/practicecodes/cleverProgrammer/todoapp/src/firebase.js":"5"},{"size":362,"mtime":1609998567547,"results":"6","hashOfConfig":"7"},{"size":2412,"mtime":1610126561400,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1609998567547,"results":"9","hashOfConfig":"7"},{"size":2946,"mtime":1610126880165,"results":"10","hashOfConfig":"7"},{"size":541,"mtime":1610038612676,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ry63s6",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/krishna/Desktop/practicecodes/cleverProgrammer/todoapp/src/reportWebVitals.js",[],["24","25"],"/home/krishna/Desktop/practicecodes/cleverProgrammer/todoapp/src/App.js",["26"],"import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Input,\n  FormControl,\n  InputLabel,\n  List,\n} from \"@material-ui/core\";\nimport Todo from \"./Todo\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  //useeffect loads when the page loads first time or when the event mentioned after the function triggers\n  useEffect(() => {\n    db.collection(\"todos\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setTodos(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            todo: doc.data().task,\n            timestamp: \"Data\",\n            // doc.data().timestamp,\n          }))\n        );\n      });\n  }, []);\n  console.log(todos);\n  // const addInput = (e) => {\n  //   e.preventDefault();\n  //   console.log(e.target.value);\n  //   setInput(input)\n  //   // setInput(e.target.value)\n  // };\n\n  const addTodo = (event) => {\n    //this will stop refreshing the page\n    event.preventDefault();\n    db.collection(\"todos\").add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      task: input,\n    });\n    // setTodos([...todos, input]); //appends theinput value to end of todos\n    setInput(\"\"); // clears the input in form\n  };\n  const ulstyle = {\n    display: \"inline-block\",\n  };\n\n  return (\n    <div className=\"App\">\n      <h1  style={{color:'red'}} >Todo App</h1>\n      <br/>\n      <br/>\n      <br/>\n      <form action=\"\">\n        <FormControl>\n          <InputLabel htmlFor=\"my-input\"> write a todo</InputLabel>\n          <Input\n            id=\"my-input\"\n            aria-describedby=\"my-helper-text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n          />\n          {/* <input type=\"text\" /> */}\n\n          {/* <FormHelperText id=\"my-helper-text\">\n            We'll never share your email. */}\n          {/* </FormHelperText> */}\n        </FormControl>\n        <Button\n          disabled={!input}\n          type=\"submit\"\n          onClick={addTodo}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Add Todo\n        </Button>\n      </form>\n      <br />\n\n      <ul  style={ulstyle} >\n        {todos.map((todo) => (\n          <Todo key={todo.id} todo={todo} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","/home/krishna/Desktop/practicecodes/cleverProgrammer/todoapp/src/index.js",[],"/home/krishna/Desktop/practicecodes/cleverProgrammer/todoapp/src/Todo.js",[],"/home/krishna/Desktop/practicecodes/cleverProgrammer/todoapp/src/firebase.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":8,"column":3,"nodeType":"33","messageId":"34","endLine":8,"endColumn":7},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]